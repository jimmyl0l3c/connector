name: Rust CI/CD

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ "main" ]
  release:
    types: [ created ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        platform: [windows, linux]
        include:
          - platform: windows
            os: windows-latest
          - platform: linux
            os: ubuntu-latest

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: connector-${{ matrix.platform }}
        path: target/debug/${{ matrix.platform == 'windows' && 'connector.exe' || 'connector' }}

  create-new-release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    name: Create new release
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: connector
          pattern: connector-*
          merge-multiple: true

      - name: Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PAT }}
        with:
          draft: false
          generate_release_notes: true
          files: connector/*
          fail_on_unmatched_files: true
