name: Rust CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [ created ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        platform: [windows, linux]
        include:
          - platform: windows
            os: windows-latest
          - platform: linux
            os: ubuntu-latest

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: connector-${{ matrix.platform }}
        path: target/debug/${{ matrix.platform == 'windows' && 'connector.exe' || 'connector' }}

  upload-release-asset:
    if: github.event_name == 'release'
    needs: build
    runs-on: windows-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          path: connector
          pattern: connector-*
          merge-multiple: true
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./connector
          asset_name: connector
          asset_content_type: application/octet-stream
